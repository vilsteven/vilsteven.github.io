{"pages":[],"posts":[{"title":"Hexo+Docker+NGINX搭建个人博客","text":"搭建思路 使用轻量应用服务器（Ubuntu 20.04）搭建。 在Docker容器中搭建Hexo环境，用于生成静态站点文件。 通过Docker文件夹映射，实现宿主服务器和容器内的文件互通。 宿主服务器配置NGINX作为Web服务器，指向映射文件夹中生成的静态站点目录。 将Hexo博客工程提交到GitHub，通过GitHub Actions实现自动化发布和站点更新（单独记录）。 方案说明 在Docker容器中搭建Hexo是为了环境隔离，也方便以后迁移。 在宿主服务器配置NGINX是因为想搭建多个站点，以后还可能会部署一些API服务，想共用NGINX。 使用GitHub仓库存放博客工程，方便对主题、配置的修改做记录和管理；配合GitHub Actions可以实现自动化发布和站点更新，而且支持在未配置Hexo环境的设备上更新博客，只需要能够将文件提交到GitHub仓库中。 实施步骤安装 Docker在Ubuntu下，使用官方脚本安装。 Install Docker1234# 获取Docker安装脚本，安装Dockercurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun# 验证是否成功 - 信息中包含Client和Server两部分说明成功docker version 构建 Docker Image把宿主服务器/usr/blog文件夹作为博客的工作目录，创建dockerfile文件夹存放用于构建Docker Image的Dockerfile。 Create Dockerfile1234# 创建dockerfile文件夹mkdir dockerfile# 使用vim创建和编辑Dockerfilevim dockerfile/Dockerfile Dockerfile用来配置构建镜像的基础环境、构建步骤和构建指令。目标是通过Docker镜像自动搭建好Hexo的运行环境，安装需要的组件，应用Icarus主题，需要自动化处理的事项有： 安装 hexo-cli 初始化Hexo博客工程。 安装必要的 Hexo 插件。 应用 Icarus主题 Dockerfile1234567891011121314151617181920212223242526272829303132333435363738# 使用最新的node镜像作为基础环境 FROM node:latest MAINTAINER Steven &lt;vilsteven@gmail.com&gt; # 设置临时工作目录 WORKDIR /usr/temp # 配置 npm 镜像站点 RUN npm config set registry https://registry.npm.taobao.org # 安装 hexo-cli RUN npm install hexo-cli -g # 初始化 hexo blog RUN hexo init # 安装 icarus 主题需要的依赖 RUN npm install --save bulma-stylus@0.8.0 inferno inferno-create-element hexo-renderer-inferno hexo-component-inferno # 方便图片附件引用 RUN npm install hexo-asset-image --save # 资源压缩 RUN npm install hexo-all-minifier --save # 生成唯一链接 RUN npm install hexo-abbrlink --save # 生成sitemap，优化SEO RUN npm install --save hexo-generator-sitemap hexo-generator-baidu-sitemap # 手动编译optipng-bin，否则会报错，找不到文件 RUN node node_modules/optipng-bin/lib/install.js # 下载 icarus 主题 RUN curl -o &quot;theme.zip&quot; -L https://github.com/ppoffice/hexo-theme-icarus/archive/refs/tags/4.4.0.zip RUN unzip theme.zip -d themes/ RUN mv themes/hexo-theme-icarus-4.4.0 themes/icarus RUN rm -f theme.zip # 配置 hexo 使用 icarus 主题 RUN sed -i &quot;s/landscape/icarus/g&quot; _config.yml # 删除默认 landscape 主题 RUN npm uninstall hexo-theme-landscape --save RUN rm -f _config.landscape.ymlRUN rm -r -f themes/landscape# 配置正式工作目录 WORKDIR /usr/blog # hexo 默认端口号 4000 EXPOSE 4000 Dockerfile说明： Docker容器的主工作目录为/usr/blog，Hexo工程和插件存放在临时工作目录为/usr/temp，是因为后续创建容器会把宿主服务器的博客站点目录映射到容器内的/usr/blog，需要在映射后，再将/usr/temp的文件移动到/usr/blog中。有些繁琐，没有想到怎么处理更方便。 主题使用下载源码手动配置的方式，方便后续按需要对主题进行修改。在将博客工程提交到GitHub时，准备忽略node_modules文件夹，主题源码放到themes文件夹中的方式也可以更方便地记录主题代码的修改历史。 使用编辑好的Dockerfile创建Docker镜像。 Build Image1docker build -t hexo-icarus /usr/blog/dockerfile/ 运行 Docker 容器使用创建好的镜像运行Docker容器，做以下配置： 容器的4000端口映射到宿主服务器的4000端口。 宿主服务器/usr/blog/oxygen-coder目录映射到容器/usr/blog目录。 容器命名为oxygen-coder。 Run Docker1docker run -itd -p 4000:4000 -v /usr/blog/oxygen-coder/:/usr/blog --name oxygen-coder hexo-icarus 配置 Hexo进入Docker容器，默认会进入到容器的/usr/blog目录。 Execute Bash In Docker1docker exec -it oxygen-coder /bin/bash 将临时工作目录/usr/temp中的文件移动到当前工作目录，删除临时目录。 Move Blog Files12mv /usr/temp/* /usr/blog/rm -r /usr/temp 修改_config.yml文件，进行基本的Hexo配置。 _config.yml1234567891011121314151617# 只列出做出修改的配置项# 站点信息## 站点名称title: OxygenCoder ## 站点作者author: 王大猫 ## 站点语言language: zh-CN ## 站点时区timezone: 'Asia/Shanghai'# 站点URL配置## 站点URLurl: https://www.oxygencoder.com## 定义文章链接permalink: posts/:name.html 启动Hexo的内置Web服务器。 Start Hexo Server1hexo server Hexo Server默认使用的端口号是4000，前面已经将宿主服务器的4000端口和Docker容器的4000端口做了映射，通过虚拟服务器的控制台，开通服务器4000端口的访问权限，就可以在浏览器中通过http://serverIP:4000访问预览Hexo博客了。 通过Hexo生成站点静态文件。 Generate Static Files12hexo cleanhexo generate 站点静态文件会生成在Docker容器中的/usr/blog/public文件夹中，按照配置的映射关系，对应的宿主服务器路径为/usr/blog/oxygen-coder/public。 安装 NGINX在宿主服务器上，通过APT安装NGINX。 Install NGINX12sudo apt updatesudo apt install nginx 配置 NGINX 站点NGINX相关的文件在/etc/nginx/目录下，在sites-available文件夹中创建和编辑站点配置文件。 Create oxygencoder.com.conf1vim /etc/nginx/sites-available/oxygencoder.com.conf 编辑配置文件，达到以下目标： 站点根目录指向Hexo生成的静态文件目录/usr/blog/oxygen-coder/public。 设置www.oxygencoder.com为默认域名，访问oxygencoder.com也会自动跳转到www.oxygencoder.com 站点默认使用https，且通过http访问域名也会自动跳转到https。 使用自定义的404页面。 支持http2。 完整的配置文件如下。 oxygencoder.com.conf12345678910111213141516171819202122232425262728293031323334353637383940414243444546server { listen 443 ssl http2; listen [::]:443 ssl http2; server_name www.oxygencoder.com; keepalive_timeout 70; # 根目录指向Hexo生成的静态文件目录 root /usr/blog/oxygen-coder/public; index index.html; location / { try_files $uri $uri/ =404; } # 自定义404页面 error_page 404 /404.html; ssl_certificate cert/6116736_www.oxygencoder.com.pem; ssl_certificate_key cert/6116736_www.oxygencoder.com.key; ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on;}server { listen 80; listen [::]:80; server_name www.oxygencoder.com; # 跳转到 https://www.oxygencoder.com rewrite ^/(.*) https://www.oxygencoder.com/$1 permanent;}server { listen 443 ssl http2; listen [::]:443 ssl http2; listen 80; listen [::]:80; server_name oxygencoder.com; # 跳转到 https://www.oxygencoder.com rewrite ^/(.*) https://www.oxygencoder.com/$1 permanent;} 将配置文件链接到sites-enabled文件夹内，使之生效。 Create Soft Link1ln -s /etc/nginx/sites-available/oxygencoder.com.conf /etc/nginx/sites-enabled/oxygencoder.com.conf 重启NGINX，加载新的配置。 Restart NGINX12sudo service nginx stopsudo service nginx start 在虚拟服务器控制台配置好域名解析，就可以通过域名www.oxygencoder.com访问搭建的博客了。 完成Hexo博客站点的搭建才是刚刚开始，后面还要实现Hexo博客的自动发布和更新，配置和自定义修改主题，优化站点配置，最最重要的是坚持学习、坚持记录和输出，让自己和博客一起成长，加油吧少年💪。","link":"/posts/51015.html"},{"title":"Hello World","text":"Hello World～ 俗套，但还是想用这个标题，在这里，以王大猫为名，开启一段新的经历。 缘起搭建自己的Blog，这个想法从大学就有了，是众多一直没有实施的想法之一。为什么没去做呢？ 大学记忆想起大学，想起Blog，脑子里浮现出来的，是宿舍里Calvin用Macbook不舍昼夜调试Blog样式的情形 。那时候是IE的天下，Chrome刚刚推出，宿舍里总是充斥着对IE的诅咒，多么美好的回忆。 我是喜欢折腾的，可以花很多时间逛杀毒软件论坛，花很多时间配置Comodo防火墙规则（虽然除了给自己徒增麻烦，增加我那台破电磁炉的负担外，并没什么实际用处），第一时间体验新的操作系统，让电脑中的软件保持最新的版本，玩QQ空间、校内网（人人网）、Twitter、Facebook、Foursquare……甚至在Twitter上极具耐心地去抢腾讯微博的邀请码。 电磁炉 是Calvin对我笔记本电脑的称呼，因为它又大又重，外观极像电磁炉，散热还极其不好，WOW下团本经常热到蓝屏死机…多么美好的回忆😂。 为什么没搞Blog呢？写到这里，突然想起来，并非没有去做。我在Google Blogger上创建过自己的Blog，名字是Laputa。赶快去看看，嗯，还在，只不过空空如也，曾经花时间搞的布局样式也都不存在了，记不清到底有没有在上面写过东西，总之，是次失败的尝试。 机缘巧合又拾起写Blog的想法，也是机缘巧合。某天心血来潮，把大学时发得Twitter回顾了一遍。那时的想法，那时的言论，经过这么多年，早就被遗忘了，甚至有“这真的是我发出来的吗”这样的疑问。内心是一种惊喜的感觉，这种惊喜让我觉得能够在网络上留下一些痕迹，也是很美好的事情。但这种惊喜并没有让我决定开始写Blog。 后来，觉得开车通勤路上太浪费时间，而且有很多想看的书，一直以下班回家要陪儿子没时间看书为理由，冷落在未读书单里。既然没时间专注阅读，又不想通勤太浪费时间，干脆就在开车的时候听书吧。第一本随缘选到了《被讨厌的勇气》，真的很庆幸选择了这本书。 我总是内心里渴望变成某一种人，总是想着“要是xxxx就好了”，总是想改变，但是又对改变后不可预知的未来感觉不安，没有勇气走出舒适区。也习惯于给自己找个“正当”的借口来让自己感觉我这么做不是自己的错，给自己一种 “不是我做不到，只是因为xxx原因，我没去做而已” 的幻觉。 最典型的一个事情，我经常拿原生家庭影响来逃避现实，抱怨人生。我就曾经和Calvin这样抱怨过，“ 我出生于一个小县城，大学之前只去过很少几次市里，还是3线城市，没有机会到大一些的城市见见世面，甚至到大学都不知道在肯德基怎么点餐。大学前除了家里就是学校学习，获取到的教诲也只限于好好学习，考上大学就好了。所谓心智，也是到大学，来到这个城市，才开始成长。跟着你见识到很多不知道的事情，获取到很多从没听说过的想法。如果以前能有机会多见识见识世面，让心智能多成长一些就好了”。“如果xxx就好了”，多么典型的借口。我抱怨的都是事实，有什么问题呢，抱怨一下都不行吗？是事实，当然可以抱怨，我也需要发泄。但是心里得明白，这些已经发生的，已无法改变，就不要让它再继续阻碍自己获得更好的未来，不要用它作为逃避的借口。如果真的希望成为更好的人，真的有决心，就把握现在，去做吧。过去无法改变，未来无法预期，能做的只有把当下做好。 阿德勒的目的论是说：“无论之前的人生发生过什么，都对今后的人生如何度过没有影响。”决定自己人生的是活在“此时此刻”的你自己。 哲人：要想改变生活方式需要很大的“勇气”。面对变化产生的“不安”与不变带来的“不满”，你一定是选择了后者。青年：……现在您又用了“勇气”这个词啊。哲人：是的，阿德勒心理学就是勇气心理学。你之所以不幸并不是因为过去或者环境，更不是因为能力不足，你只不过是缺乏“勇气”，可以说是缺乏“获得幸福的勇气”。 对这本书这些观点有强烈的认同感，也源自一个巧合。在听这本书前，好基友 Cooper 来苏州相聚，这是老婆怀孕前一起青海游后的第一次相聚。3年多了，来一趟必然不能轻易放过他，连着两晚东扯西聊到凌晨3点。聊到最后，发现我们俩都会有意无意给自己找些道貌岸然的借口，让自己心安理得不去做某些事情，或者让自己处于一种道德高点，让自己觉得某些事是其他人的问题或者干脆是这个社会的问题，然后就可以心安地接受自己某些事情没有做好。所以在听到《被讨厌的勇气》中的那些观点，心里顿时有种强烈的认同感，而且十分感慨这种巧合，冥冥中自有天意一般。 总之这些巧合，让我决定去做一些自我改变，去做一些自己想做没有去做的事情。思考过程中又一个巧合，再次听到《软技能2》中建议程序员需要有自己的Blog，那么就从搭建自己的Blog开始吧。 主题Blog用来记录个人成长，主要是职业技能和软件开发学习的记录。记录自己的学习过程、实践过程、读书笔记还有自己认知相关的积累和总结。近期会把自己折腾Blog的实践整理出来，Hexo的搭建和自动发布、Icarus主题的个性化修改等等，另外也打算把博客内的文章同步到同名的微信公众号里。 命名我是命名困难综合症患者，撸代码的时候就被类名、函数名、变量名所累，经常和 sk 开玩笑说写代码最难的是命名。 OxygenCoder 是老婆的建议，她希望我始终保持一种“有氧”状态，吸收各种形式的“氧气”，生活和事业都保持有氧健康。我也希望在这里记录我生活中有意义的“氧气”，若干年后，一个偶然的空闲，来这里回顾过往，能有一种惊喜，依然能感受到这些“氧气”的芬芳。 可能更重要的原因是 oxygencoder.com 域名没被注册😂。 至于王大猫，并不是我常用的网名。我大学后一直都使用 vilsteven 这个网名，因为我选了steven这个英文名，就在前面按喜好随机增加字符，直到第一个没被人使用的名字。这个名字到现在都基本没别人用，可能这个名字确实太…独特了吧😂。在这里用王大猫，是因为我儿子。3岁的小家伙，最近喜欢看猫和老鼠，非要把自己的名字改成Jerry，还是一只喜欢大猫的Jerry。每天下班回到家，就听到他在喊“大猫回来了”，然后跑过来给大猫一个拥抱。《代码整洁之道》作者Robert C. Martin的昵称是Uncle Bob，起初也是别人给他起的外号，后来因为怀念而开始使用这个昵称。可能过些天，儿子就不再叫我大猫了，也就没人叫我大猫了，我想使用这个名字，来记忆这段美好。 有一件事让我很不爽，我知道这么想不太正常，但我就是很不爽。再也没有人叫我“Bob大叔”了。我发现我开始怀念这个名字。所以我不能免俗地把“Uncle Bob”放在了我的E-mail和Netnews签名中。这个名字就这么流传了下来。回过头来看，其实这是一个挺好的品牌名称。 -《架构整洁之道》 折腾搭建Blog是我愿意投入和折腾的事情，实际折腾的事情远比最初想象的多。折腾的过程随心且发散（毫无计划…囧），有时候很享受这种无压力的专注，不用考虑具体的标准，随心就好了。总结下来，大概折腾了下面这些事情。 否掉了使用商业平台，自己搞。国外空间比较贵，不需要备案；国内空间促销活动几年内都比较便宜，但是需要备案。比较穷，买了阿里云的轻量应用服务器，99¥/年的价格，可优惠续订3次，4年只需要396。 域名还是想上.com的，纠结很久，最后听老婆建议，注册了oxygencoder.com。 刚开始用Wordpress，找不到自己满意的主题，感觉太受限，太死板，不符合我的习惯。看到Icarus主题，就决定使用Hexo生成静态站点，使用NGINX作为Web服务器。 在Icarus主题基础上做了一些个性化修改，字体、列宽、布局、头像大小等等，准备写篇Blog记录。用Inkscape简单制作了站点Logo的SVG，使用了腾讯公益404页面，总之把博客的架子搭起来了。 提交IPC备案材料，审批等了将近一个月。通过以后，开始提交公安备案材料。因为关了评论，不支持注册，网站是非交互式的，公安备案就简单很多。如果搞交互式服务，还需要提交相关的安全评估报告，需要有评论内容的审查和追踪机制。公安备案一周左右通过审批，按要求把IPC和公安备案编号加到站点底部，这些麻烦的事情总算结束了。 Hexo写Blog是用Markdown格式，这点比较爽，但是想方便的发布还是需要折腾一下。没有使用Hexo的发布插件，是通过借用GitHub的Action功能实现的自动发布。编写好Blog，提交到Github的仓库里，就会触发配置的Action，自动将变动更新同步到我的服务器，完成自动发布。现在写Blog就像写代码，写完提交就可以了。 计划搭建Blog的过程对我来说是比较有意思的，即便Wordpress、Hexo、主题美化、SVG制作这些都是第一次搞，也是很容易投入进去并且有产出的。但是怎么样可以持续地输出Blog，是一个大挑战。内容从哪里来，怎么样让自己坚持写下去，以怎样的频率写下去，这些都是问题。 为了坚持写下去，第一个决定是低门槛。让自己保持舒服的状态，自由书写，服务的对象就是自己，不需要有过多的顾虑。 内容从学习实践、读书笔记中积累，使用flomo随手记录知识碎片，通过Obsidian整理沉淀，再输出到Blog和微信公众号。发布频率暂定为月更，后续根据情况和状态再调整吧。 以上为OxygenCoder开篇，记录这里诞生的初衷。","link":"/posts/16107.html"}],"tags":[{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"Icarus","slug":"Icarus","link":"/tags/Icarus/"},{"name":"NGINX","slug":"NGINX","link":"/tags/NGINX/"},{"name":"Docker","slug":"Docker","link":"/tags/Docker/"},{"name":"初衷","slug":"origin","link":"/tags/origin/"}],"categories":[{"name":"实践记录","slug":"practice","link":"/categories/practice/"},{"name":"其他","slug":"others","link":"/categories/others/"}]}